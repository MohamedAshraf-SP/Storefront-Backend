### env variables

PORT  
PG_HOST
PG_DB
PG_DB_test

PG_USER
PG_PASSWORD
ENV=dev

pepper
SALTROUNDS
code

### my names:

PG_HOST="localhost"
PG_DB="project"
PG_DB_test="second"

PG_USER="postgres"
PG_PASSWORD="postgres"
ENV=dev

### db server port is "5432"

### DB CREATION

CREATE USER postgres with password '**\*\*\***';
use user postgres;

psql -h localhost -p 5432 -U postgres postgres
create database project;

grant all privileges on database project to postgres;

\c project;

#####

create table users (
id SERIAL PRIMARY KEY,
fristName varchar(50) NOT NULL,
lastName varchar(50),
password varchar(100) NOT NULL
);

create table products (
id SERIAL PRIMARY KEY,
name varchar(100) NOT NULL,
price integer NOT NULL
);

create table orders (
id SERIAL PRIMARY KEY,
name varchar(100) NOT NULL,
status VARCHAR(20) NOT NULL,
date date,
user_id SERIAL REFERENCES users(id),
product_id SERIAL REFERENCES products(id)
);

create table product_order (
id SERIAL PRIMARY KEY,
order_id SERIAL REFERENCES orders(id),
product_id SERIAL REFERENCES products(id)
);

---

PORT : the port to listen on
PG_HOST : the local host
PG_DB : the database name
PG_DB_test : the database used in tests
PG_USER : the database username
PG_PASSWORD : the password for the user "PG_USER"

-these are all variables called from .env file to database.ts file

- add these variables depending on your enviroment

### end points

    post man file is attached in the project with name "postman_api"

### products

    id:Number,
    name:String,
    price:Number

### users

    id:Number,
    fristName:String,
    lastName:String,
    password:String

### orders

    id:Number,
    name:String,
    status:String,
    date:Date,
    user_id:String,

## product_order used in many to many relation

    id,
    product_id
    order_id

## notes

    - passwords hashed
    - all crud operations for all schemas

### run tests

    npm run test
    npm run jasmine

### run project in dev

    npm run dev

### run server

    npm run build

### run prettier

    npm run prettier

### run lint

    npm run lint

### run lintFiX

    npm run lintfx

### packages

    in pachage.json file
